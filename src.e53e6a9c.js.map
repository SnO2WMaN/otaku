{"version":3,"sources":["index.js"],"names":["$spinner","document","getElementById","from","to","turn","velocity","addEventListener","e","setFrom","touches","clientX","clientY","setTo","leave","x","y","w","window","innerWidth","h","innerHeight","z","dist","Math","sqrt","abs","tick","style","transform","requestAnimationFrame"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,eAAe,WACrCC,EAAO,KACTC,EAAK,KACLC,EAAO,EACPC,EAAW,EAEbL,SAASM,iBAAiB,aAAc,SAACC,GACvCC,EAAQD,EAAEE,QAAQ,GAAGC,QAASH,EAAEE,QAAQ,GAAGE,WAG7CX,SAASM,iBAAiB,YAAa,SAACC,GACtCK,EAAML,EAAEE,QAAQ,GAAGC,QAASH,EAAEE,QAAQ,GAAGE,WAG3CX,SAASM,iBAAiB,WAAY,SAACC,GACjCL,GAAMW,MAGZb,SAASM,iBAAiB,YAAa,SAACC,GACtCC,EAAQD,EAAEG,QAASH,EAAEI,WAGvBX,SAASM,iBAAiB,UAAW,SAACC,GACpCK,EAAML,EAAEG,QAASH,EAAEI,SACfT,GAAMW,MAGZ,IAAML,EAAU,SAACM,EAAGC,GAClBb,EAAO,CAAEY,EAAAA,EAAGC,EAAAA,IAGRH,EAAQ,SAACE,EAAGC,GAChBZ,EAAK,CAAEW,EAAAA,EAAGC,EAAAA,IAGNF,EAAQ,WACNG,IAAAA,EAAIC,OAAOC,WACfC,EAAIF,OAAOG,YACPC,GAAKlB,EAAGW,EAAIZ,EAAKY,IAAMK,EAAI,EAAIhB,EAAGY,IAAMZ,EAAGY,EAAIb,EAAKa,IAAMC,EAAI,EAAIb,EAAGW,GACrEQ,EAAOC,KAAKC,KAAK,KAACrB,IAAAA,EAAGY,EAAIb,EAAKa,EAAM,GAAKZ,KAAAA,IAAAA,EAAGW,EAAIZ,EAAKY,EAAM,IAEjET,GAAagB,EAAIE,KAAKE,IAAIJ,IAAQC,EAAOC,KAAKC,KAAK,KAAAR,IAAAA,EAAK,GAAIG,KAAAA,IAAAA,EAAK,IAAM,MACvEjB,EAAO,KACPC,EAAK,MAGDuB,EAAO,SAAPA,IACJrB,IACgB,IAAbA,GAAkBA,EAAWkB,KAAKE,IAAIpB,GAAY,GACnDkB,KAAKE,IAAIpB,GACT,KAEFD,GAAQC,EAERN,EAAS4B,MAAMC,UAAuBxB,WAAAA,OAAAA,EAAtC,SACAa,OAAOY,sBAAsBH,IAE/BA","file":"src.e53e6a9c.js","sourceRoot":"../src","sourcesContent":["const $spinner = document.getElementById(\"spinner\");\nlet from = null,\n  to = null,\n  turn = 0,\n  velocity = 0;\n\ndocument.addEventListener(\"touchstart\", (e) => {\n  setFrom(e.touches[0].clientX, e.touches[0].clientY);\n});\n\ndocument.addEventListener(\"touchmove\", (e) => {\n  setTo(e.touches[0].clientX, e.touches[0].clientY);\n});\n\ndocument.addEventListener(\"touchend\", (e) => {\n  if (from) leave();\n});\n\ndocument.addEventListener(\"mousedown\", (e) => {\n  setFrom(e.clientX, e.clientY);\n});\n\ndocument.addEventListener(\"mouseup\", (e) => {\n  setTo(e.clientX, e.clientY);\n  if (from) leave();\n});\n\nconst setFrom = (x, y) => {\n  from = { x, y };\n};\n\nconst setTo = (x, y) => {\n  to = { x, y };\n};\n\nconst leave = () => {\n  const w = window.innerWidth,\n    h = window.innerHeight;\n  const z = (to.x - from.x) * (h / 2 - to.y) - (to.y - from.y) * (w / 2 - to.x);\n  const dist = Math.sqrt((to.y - from.y) ** 2 + (to.x - from.x) ** 2);\n\n  velocity += (z / Math.abs(z)) * ((dist / Math.sqrt(w ** 2 + h ** 2)) * 0.125);\n  from = null;\n  to = null;\n};\n\nconst tick = () => {\n  velocity +=\n    (velocity !== 0 ? -velocity / Math.abs(velocity) : 0) *\n    Math.abs(velocity) *\n    0.025;\n\n  turn += velocity;\n\n  $spinner.style.transform = `rotateZ(${turn}turn)`;\n  window.requestAnimationFrame(tick);\n};\ntick();\n"]}